cmake_minimum_required(VERSION 3.5)
project(geometry VERSION 0.1 LANGUAGES CXX)

set(BUILD_Geometry ON)
set(BUILD_GeomtryTest ON)

set(CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE ON)
include(GenerateExportHeader)

if(0)
    if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
            add_compile_options(-std=c++2a)
            add_compile_options(-fPIC)
            add_compile_options(-fms-extensions)
            add_compile_options(-Wno-logical-op-parentheses)
            add_compile_options(-stdlib=libc++)
            #add_compile_options(-stdlib=libstdc++)
            #link_libraries(-lc++experimental)
            #link_libraries(-lstdc++fs)
            link_libraries(-lc++)
            link_libraries(-lc++fs)
            add_compile_options(-Wno-ignored-optimization-argument)
    endif()
endif()


if(${BUILD_Geometry})
    file(GLOB_RECURSE GEOM_SOURCES geom/*.cpp geom/*.h)
    add_library(geom SHARED ${GEOM_SOURCES})
    target_include_directories(geom PUBLIC ${PROJECT_SOURCE_DIR}/geom)
    generate_export_header(geom)
else()
    message("------------- Library geom excluded from the build -------------")
endif() 

if(${BUILD_GeomtryTest})
    file(GLOB_RECURSE GEOM_TEST_SOURCES geomTest/*.cpp geomTest/*.h)
    add_executable(geomTest ${GEOM_TEST_SOURCES})
    target_link_libraries(geomTest PUBLIC geom)
else()
    message("------------- Executable geomTest excluded from the build -------------")
endif()